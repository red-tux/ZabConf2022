---
- hosts: zabbix

  tasks:
  - name: get list of pacakges installed
    ansible.builtin.package_facts:
      manager: auto

  - name: Zabbix GPG keys
    rpm_key:
      key: "{{ item }}"
      state: present
    loop:
    - https://repo.zabbix.com/RPM-GPG-KEY-ZABBIX-79EA5ED4
    - https://repo.zabbix.com/RPM-GPG-KEY-ZABBIX-A14FE591
    when: "'zabbix-release' not in ansible_facts['packages']"

  - name: Install Zabbix repo RPM
    dnf:
      name: https://repo.zabbix.com/zabbix/6.2/rhel/8/x86_64/zabbix-release-6.2-1.el8.noarch.rpm
    when: "'zabbix-release' not in ansible_facts['packages']"

  - name: disable firewall
    ansible.builtin.systemd:
      name: firewalld
      state: stopped
      enabled: false

  - name: set selinux to permissive
    ansible.builtin.selinux:
      state: permissive
      policy: targeted
      
- hosts: zabbix_server

  tasks:
  - name: get list of pacakges installed
    ansible.builtin.package_facts:
      manager: auto

  - name: enable php 7.4 module
    dnf:
      name: '@php:7.4'
      state: present
    # register: output
  
  - name: enable postgres 13 module
    dnf:
      name: '@postgresql:13'
      state: present
    

  # - debug: var=output
    # command: 
    #   cmd: dnf module switch-to php:7.4
    # warn: false

  - name: install packages
    dnf:
      name: "{{ item }}"
    loop:
    - zabbix-server-pgsql
    - zabbix-web-pgsql
    - zabbix-apache-conf
    - zabbix-sql-scripts
    - zabbix-selinux-policy
    - zabbix-agent
    - python3-psycopg2
    - postgresql-server
    - postgresql
    register: rpm_inst_out

  - name: initialze the DB
    command:
      cmd: /usr/bin/postgresql-setup --initdb
    ignore_errors: true
    register: init_db
    # when: rpm_inst_out.changed

  - name: start DB
    ansible.builtin.systemd:
      name: postgresql
      state: started
      enabled: true
    when: init_db.rc | default(1) == 0

  - name: create db user
    become: true
    become_user: postgres
    community.postgresql.postgresql_user:
      name: zabbix
      password: zabbix

  - name: allow zabbix access to zabbix
    become: true
    become_user: postgres
    community.postgresql.postgresql_pg_hba:
      dest: /var/lib/pgsql/data/pg_hba.conf
      contype: host
      users: zabbix
      source: ::1
      databases: zabbix
      method: md5
      state: present

  - name: create zabbix db
    become: true
    become_user: postgres
    community.postgresql.postgresql_db:
      name: zabbix
      owner: zabbix
    register: create_db_out

  - name: allow zabbix user full permissions
    become: true
    become_user: postgres
    community.postgresql.postgresql_privs:
      db: zabbix
      privs: ALL
      roles: zabbix
      type: database

  - name: populate DB
    # become: true
    # become_user: postgres
    shell:
      cmd: 'zcat /usr/share/doc/zabbix-sql-scripts/postgresql/server.sql.gz | psql -h localhost zabbix zabbix'
    environment:
      PGPASSWORD: zabbix
    when: create_db_out.changed

  - name: configure zabbix server
    ansible.builtin.lineinfile:
      path: /etc/zabbix/zabbix_server.conf
      line: DBPassword=zabbix
      insertafter: '^# DBPassword='
    register: update_zbx_server_conf

  - name: name enable zabbix services
    ansible.builtin.systemd:
      name: "{{ item }}"
      enabled: true
    loop:
    - zabbix-server
    - zabbix-agent
    - httpd
    - php-fpm

  - name: restart zabbix services
    ansible.builtin.systemd:
      name: "{{ item }}"
      state: restarted
    loop:
    - zabbix-server
    - zabbix-agent
    - httpd
    - php-fpm
    when: update_zbx_server_conf.changed

- hosts: zabbix_proxy

  tasks:
  - name: install packages
    dnf:
      name: "{{ item }}"
    loop:
    - zabbix-proxy-sqlite3
    - zabbix-selinux-policy
    - zabbix-agent

  - name: create zabbix user homedir
    ansible.builtin.file:
      path: /var/lib/zabbix
      state: directory
      owner: zabbix
      group: zabbix

  - name: update proxy config file
    ansible.builtin.lineinfile:
      path: /etc/zabbix/zabbix_proxy.conf
      line: "{{ item.line }}"
      insertafter: "{{ item.after }}"
      regexp: "{{ item.regexp | default(omit) }}"
    loop:
    - line: DBName=/var/lib/zabbix/db.sqllite
      after: '^# DBName='
      regexp: '^DBName='
    - line: ProxyMode=0
      after: '^# ProxyMode='
    - line: 'Server=zbxs1.lab.mclean.red-tux.net'
      after: '^# Server='
    register: update_zbx_proxy_conf

  - name: enable zabbix services
    ansible.builtin.systemd:
      name: "{{ item }}"
      enabled: true
    loop:
    - zabbix-proxy

  - name: restart zabbix services
    ansible.builtin.systemd:
      name: "{{ item }}"
      state: reloaded
    loop:
    - zabbix-proxy
    when: update_zbx_proxy_conf.changed

- hosts: zabbix_client

  tasks:
  - name: install packages
    dnf:
      name: "{{ item }}"
    loop:
    - zabbix-agent    